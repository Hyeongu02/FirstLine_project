<?xml version="1.0" encoding="UTF-8"?>

<!-- 1. mapper 꺼로 긁어오기 -->
<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
	1. 모든 내용은 mapper 안으로 들어감
	2. namespace에는 구현인터페이스의 풀 경로가 들어감
	3. id 속성은 mapper 인터페이스에 있는 메소드명이 들어감
	4. resultType 속성은 반환 받을 타입이 들어감 (string, int, double, dto 풀 경로)
	
	****마이바티스의 매개변수는 일단 꼭 '1개'여야 함
	
	5. parameterTYPE에는 매개변수의 타입이 들어감 (string, int, double, dto 풀 경로)
	  -> 다만 생략 가능함
	  
	6. ?값은 #{DTO의 멤버변수명}으로 바뀜 ** 대소문자 ** 
	
	7. SELECT만 resultType 쓰고 나머지 INSERT, UPDATE, DELETE는 parameterType 씀 (resultSet과 동일함)
	
	8. ?가 단일 값인 경우에는 매개변수명을 따라감
-->

<!-- 2. mapper 작성하기, id 값(메소드명)과 resultType(반환 타입) 잘 적기 -->
<mapper namespace="com.kkodamkkodam.board.model.UserMapper">
	
	<select id="checkId" resultType="com.kkodamkkodam.user.model.UserDTO"> <!-- dto 풀 경로 -->
		SELECT * FROM USERS WHERE ID = #{id}
	</select>
	
	<insert id="signUp" parameterType="com.kkodamkkodam.user.model.UserDTO"><!-- 매개변수 타입 -->
		INSERT INTO USERS(USER_NO, ID, PW, NAME, DELETED) VALUES (USER_SEQ.NEXTVAL, #{id}, #{pw}, #{name}, DEFAULT) <!-- (#{DTO의 멤버변수명}) -->
	</insert>
	
	<select id="login" parameterType="map" resultType="com.kkodamkkodam.user.model.UserDTO">
		SELECT * FROM USERS WHERE ID = #{id} AND PW = #{pw}
	</select>
	
	<select id="getInfo" resultType="com.kkodamkkodam.user.model.UserDTO">
		SELECT * FROM USERS WHERE USER_NO = #{user_no}
	</select>
	
	<update id="update" parameterType="com.kkodamkkodam.user.model.UserDTO">
		UPDATE USERS SET PW = #{pw}, NAME = #{name} WHERE USER_NO = #{user_no}
	</update>
	
	<delete id="delete" parameterType="int">
		DELETE FROM BOARD WHERE USER_NO = #{user_no}
	</delete>

</mapper>